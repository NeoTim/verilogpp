/**INST bus_keeper.v keeper7 --pretty**/
/*PPSTART*/
bus_keeper keeper7 (
   .clk                       (clk                      ) //  input
,  .reset_n                   (reset_n                  ) //  input
,  .busNNN_valid              (busNNN_valid             ) //  input
,  .busNNN_in                 (busNNN_in                ) //  input [31:0]
,  .busNNN_out                (busNNN_out               ) // output [31:0]
);
/*PPSTOP*/


/**FORINST bus_keeper.v keeper 1 2 3 --pretty
  s/NNN/${enumerator}/g;
**/
/*PPSTART*/
bus_keeper keeper_1 (
   .clk                       (clk                      ) //  input
,  .reset_n                   (reset_n                  ) //  input
,  .busNNN_valid              (bus1_valid               ) //  input
,  .busNNN_in                 (bus1_in                  ) //  input [31:0]
,  .busNNN_out                (bus1_out                 ) // output [31:0]
);
bus_keeper keeper_2 (
   .clk                       (clk                      ) //  input
,  .reset_n                   (reset_n                  ) //  input
,  .busNNN_valid              (bus2_valid               ) //  input
,  .busNNN_in                 (bus2_in                  ) //  input [31:0]
,  .busNNN_out                (bus2_out                 ) // output [31:0]
);
bus_keeper keeper_3 (
   .clk                       (clk                      ) //  input
,  .reset_n                   (reset_n                  ) //  input
,  .busNNN_valid              (bus3_valid               ) //  input
,  .busNNN_in                 (bus3_in                  ) //  input [31:0]
,  .busNNN_out                (bus3_out                 ) // output [31:0]
);
/*PPSTOP*/
